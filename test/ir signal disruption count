#!/usr/bin/env python3
import RPi.GPIO as GPIO
import time

# Configuration
IR_RX_PIN = 18      # BCM pin for beam receiver (input)
IR_TX_PIN = 5       # BCM pin for IR emitter driver (output)
LED_PIN = 12        # BCM pin for indicator LED (digital on/off)
COOLDOWN = 0.6      # seconds to ignore repeated triggers
LED_ON_TIME = 0.15  # seconds LED stays on per disruption

# State
count = 0
last_time = 0.0
running = True

def setup():
    GPIO.setmode(GPIO.BCM)
    GPIO.setup(IR_RX_PIN, GPIO.IN, pull_up_down=GPIO.PUD_UP)
    GPIO.setup(IR_TX_PIN, GPIO.OUT)
    GPIO.setup(LED_PIN, GPIO.OUT)
    GPIO.output(IR_TX_PIN, GPIO.HIGH)   # turn emitter ON
    GPIO.output(LED_PIN, GPIO.LOW)

def cnt(channel=None):
    global count, last_time
    now = time.time()
    if now - last_time >= COOLDOWN:
        count += 1
        last_time = now
        print('Beam disruption. cnt =', count)
        # Turn LED on briefly
        GPIO.output(LED_PIN, GPIO.HIGH)
        time.sleep(LED_ON_TIME)
        GPIO.output(LED_PIN, GPIO.LOW)

def loop():
    GPIO.add_event_detect(IR_RX_PIN, GPIO.FALLING, callback=cnt)  # no bouncetime
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        pass

def destroy():
    try:
        GPIO.output(IR_TX_PIN, GPIO.LOW)
    except Exception:
        pass
    GPIO.cleanup()

if __name__ == '__main__':
    setup()
    try:
        loop()
    finally:
        destroy()
